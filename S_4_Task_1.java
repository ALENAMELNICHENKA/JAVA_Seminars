/*üìå 1) –ó–∞–º–µ—Ä—å—Ç–µ –≤—Ä–µ–º—è, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤ ArrayList –¥–æ–±–∞–≤—è—Ç—Å—è 10000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
üìå 2) –ó–∞–º–µ—Ä—å—Ç–µ –≤—Ä–µ–º—è, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤ LinkedList –¥–æ–±–∞–≤—è—Ç—Å—è 10000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
–°—Ä–∞–≤–Ω–∏—Ç–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º. */
import java.util.ArrayList;
import java.util.LinkedList;

public class S_4_Task_1 {

    public static void main(String[] args) {
        int count = 10_000;

        System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞");
        //—Ñ–∏–∫—Å–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ç–µ—Å—Ç–∞
        long start = System.currentTimeMillis();
        getArrayListAddLast(count);
        //—Ç–µ–∫.–≤—Ä–µ–º—è –º–∏–Ω—É—Å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ
        System.out.println(System.currentTimeMillis() - start);

        //–æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –¥–ª—è —Å–ª–µ–¥. —Ç–µ—Å—Ç–∞
        start = System.currentTimeMillis();
        getLinkedListAddLast(count);
        //—Ç–µ–∫.–≤—Ä–µ–º—è –º–∏–Ω—É—Å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ
        System.out.println(System.currentTimeMillis() - start);
        System.out.println();
    }

    //–º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü
    public static ArrayList<Integer> getArrayListAddLast(int count) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        for (int i = 0; i < count; i++) {
            arrayList.addLast(i);
        }
        return arrayList;
    }

    //—Ç–µ–ø–µ—Ä—å –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω–µ—Ü –¥–ª—è LinkedList
    public static LinkedList<Integer> getLinkedListAddLast(int count) {
        LinkedList<Integer> linkedList = new LinkedList<>();
        for (int i = 0; i < count; i++) {
            linkedList.addLast(i);
        }
        return linkedList;
    }

    //–∞ —Å–µ–π—á–∞—Å –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –Ω–∞—á–∞–ª–æ
    public static ArrayList<Integer> getArrayListAddFirst(int count) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        for (int i = 0; i < count; i++) {
            arrayList.addFirst(i);
        }
        return arrayList;
    }

    //—Ç–µ–ø–µ—Ä—å –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –Ω–∞—á–∞–ª–æ –¥–ª—è LinkedList
    public static LinkedList<Integer> getLinkedListAddFirst(int count) {
        LinkedList<Integer> linkedList = new LinkedList<>();
        for (int i = 0; i < count; i++) {
            linkedList.addFirst(i);
        }
          return linkedList;
    }

    //–º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–µ—Ä–µ–¥–∏–Ω—É
    public static ArrayList<Integer> getArrayListAddMiddle(int count) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        for (int i = 0; i < count; i++) {
            arrayList.add(arrayList.size()/2, i);
        }
        return arrayList;
    }

    //–º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–µ—Ä–µ–¥–∏–Ω—É –¥–ª—è LinkedList
    public static LinkedList<Integer> getLinkedListAddMiddle(int count) {
        LinkedList<Integer> linkedList = new LinkedList<>();
        for (int i = 0; i < count; i++) {
            linkedList.add(linkedList.size()/2, i);
        }
          return linkedList;
    }
}